trigger:
  batch: true
  paths:
    exclude:
    - CHANGELOG.md
    - LICENSE
    - README.md

variables:
- group: 'env-variables'

pool:
  vmImage: 'ubuntu-16.04'

strategy:
  maxParallel: 3
  matrix:
    Node 6:
      node_version: 6.x
    Node 8:
      node_version: 8.x
    Node 10:
      node_version: 10.x

steps:
- task: NodeTool@0
  inputs:
    versionSpec: $(node_version)
  displayName: 'Install Node.js'

- script: yarn install --ignore-engines
  displayName: 'Install NPM Dependencies'

- script: |
    curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    chmod +x ./cc-test-reporter
    ./cc-test-reporter before-build
  displayName: 'Install Code Climate Reporter'

- script: yarn lint
  displayName: 'Lint JavaScript Code'

- script: yarn test
  displayName: 'Run Unit Tests'

- script: ./cc-test-reporter after-build
  displayName: 'Publish code coverage results (codeclimate.com)'
  condition: succeededOrFailed()
  env:
    CC_TEST_REPORTER_ID: $(CC_TEST_REPORTER_ID)
    GIT_BRANCH: $(Build.SourceBranch)
    GIT_COMMIT_SHA: $(Build.SourceVersion)

- task: PublishTestResults@2
  displayName: 'Publish test results (Azure Pipelines)'
  condition: succeededOrFailed()
  inputs:
    testRunner: JUnit
    testResultsFiles: 'test/junit-results.xml'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage results (Azure Pipelines)'
  inputs: 
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'

- script: yarn coverage
  displayName: 'Publish code coverage results (coveralls.io)'
  env:
    COVERALLS_SERVICE_NAME: $(COVERALLS_SERVICE_NAME)
    COVERALLS_REPO_TOKEN: $(COVERALLS_REPO_TOKEN)
